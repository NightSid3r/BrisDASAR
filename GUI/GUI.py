#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    Jun 30, 2021 01:24:28 PM BST  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import GUI_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    GUI_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    GUI_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("960x720+427+92")
        top.minsize(120, 1)
        top.maxsize(3844, 1489)
        top.resizable(0,  0)
        top.title("BrisDASAR")
        top.iconbitmap("BrisDASAR.ico")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#f0f0f0f0f0f0")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.sub_menu = tk.Menu(top,
                activebackground="#ececec",
                activeborderwidth=1,
                activeforeground="#000000",
                background="#d9d9d9",
                borderwidth=1,
                disabledforeground="#a3a3a3",
                foreground="#000000",
                tearoff=0)
        self.menubar.add_cascade(menu=self.sub_menu,
                label="File")
        self.sub_menu.add_command(
                label="New...")
        self.sub_menu.add_command(
                label="Quit")
        self.sub_menu1 = tk.Menu(top,
                activebackground="#ececec",
                activeborderwidth=1,
                activeforeground="#000000",
                background="#d9d9d9",
                borderwidth=1,
                disabledforeground="#a3a3a3",
                foreground="#000000",
                tearoff=0)
        self.menubar.add_cascade(menu=self.sub_menu1,
                label="Edit")
        self.sub_menu1.add_command(
                label="Cut")
        self.sub_menu1.add_command(
                label="Copy")
        self.sub_menu1.add_command(
                label="Paste")
        self.sub_menu1.add_separator(
)
        self.sub_menu1.add_command(
                label="Delete")
        self.sub_menu12 = tk.Menu(top,
                activebackground="#ececec",
                activeborderwidth=1,
                activeforeground="#000000",
                background="#d9d9d9",
                borderwidth=1,
                disabledforeground="#a3a3a3",
                foreground="#000000",
                tearoff=0)
        self.menubar.add_cascade(menu=self.sub_menu12,
                label="Help")
        self.sub_menu12.add_command(
                label="About BrisDASAR...")
        self.sub_menu12.add_command(
                label="Documentation")

        self.Labelframe1 = tk.LabelFrame(top)
        self.Labelframe1.place(relx=0.01, rely=0.014, relheight=0.965
                , relwidth=0.74)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(foreground="black")
        self.Labelframe1.configure(text='''Drone Data''')
        self.Labelframe1.configure(background="#d9d9d9")

        self.Labelframe2 = tk.LabelFrame(top)
        self.Labelframe2.place(relx=0.76, rely=0.014, relheight=0.271
                , relwidth=0.229)
        self.Labelframe2.configure(relief='groove')
        self.Labelframe2.configure(foreground="black")
        self.Labelframe2.configure(text='''Probability Mapping''')
        self.Labelframe2.configure(background="#d9d9d9")

        self.TLabel3 = ttk.Label(self.Labelframe2)
        self.TLabel3.place(relx=0.045, rely=0.205, height=19, width=113
                , bordermode='ignore')
        self.TLabel3.configure(background="#d9d9d9")
        self.TLabel3.configure(foreground="#000000")
        self.TLabel3.configure(font="TkDefaultFont")
        self.TLabel3.configure(relief="flat")
        self.TLabel3.configure(anchor='w')
        self.TLabel3.configure(justify='left')
        self.TLabel3.configure(text='''Mental State (1-100):''')

        self.TLabel4 = ttk.Label(self.Labelframe2)
        self.TLabel4.place(relx=0.045, rely=0.359, height=19, width=77
                , bordermode='ignore')
        self.TLabel4.configure(background="#d9d9d9")
        self.TLabel4.configure(foreground="#000000")
        self.TLabel4.configure(font="TkDefaultFont")
        self.TLabel4.configure(relief="flat")
        self.TLabel4.configure(anchor='w')
        self.TLabel4.configure(justify='left')
        self.TLabel4.configure(text='''Energy (kCal):''')

        self.TLabel6 = ttk.Label(self.Labelframe2)
        self.TLabel6.place(relx=0.5, rely=0.513, height=19, width=68
                , bordermode='ignore')
        self.TLabel6.configure(background="#d9d9d9")
        self.TLabel6.configure(foreground="#000000")
        self.TLabel6.configure(font="TkDefaultFont")
        self.TLabel6.configure(relief="flat")
        self.TLabel6.configure(anchor='w')
        self.TLabel6.configure(justify='left')
        self.TLabel6.configure(text='''Longitude:''')

        self.TLabel5 = ttk.Label(self.Labelframe2)
        self.TLabel5.place(relx=0.045, rely=0.513, height=19, width=50
                , bordermode='ignore')
        self.TLabel5.configure(background="#d9d9d9")
        self.TLabel5.configure(foreground="#000000")
        self.TLabel5.configure(font="TkDefaultFont")
        self.TLabel5.configure(relief="flat")
        self.TLabel5.configure(anchor='w')
        self.TLabel5.configure(justify='left')
        self.TLabel5.configure(text='''Latitude:''')

        self.TEntry3 = ttk.Entry(self.Labelframe2)
        self.TEntry3.place(relx=0.045, rely=0.615, relheight=0.108
                , relwidth=0.436, bordermode='ignore')
        self.TEntry3.configure(takefocus="")
        self.TEntry3.configure(cursor="ibeam")

        self.TEntry4 = ttk.Entry(self.Labelframe2)
        self.TEntry4.place(relx=0.5, rely=0.615, relheight=0.108, relwidth=0.436
                , bordermode='ignore')
        self.TEntry4.configure(takefocus="")
        self.TEntry4.configure(cursor="ibeam")

        self.TEntry5 = ttk.Entry(self.Labelframe2)
        self.TEntry5.place(relx=0.591, rely=0.359, relheight=0.108
                , relwidth=0.345, bordermode='ignore')
        self.TEntry5.configure(takefocus="")
        self.TEntry5.configure(cursor="ibeam")

        self.TEntry6 = ttk.Entry(self.Labelframe2)
        self.TEntry6.place(relx=0.591, rely=0.205, relheight=0.108
                , relwidth=0.345, bordermode='ignore')
        self.TEntry6.configure(takefocus="")
        self.TEntry6.configure(cursor="ibeam")

        self.TButton2 = ttk.Button(self.Labelframe2)
        self.TButton2.place(relx=0.591, rely=0.821, height=25, width=76
                , bordermode='ignore')
        self.TButton2.configure(takefocus="")
        self.TButton2.configure(text='''Execute''')

        self.TProgressbar1 = ttk.Progressbar(self.Labelframe2)
        self.TProgressbar1.place(relx=0.045, rely=0.821, relwidth=0.5
                , relheight=0.0, height=25, bordermode='ignore')
        self.TProgressbar1.configure(length="110")

        self.Labelframe3 = tk.LabelFrame(top)
        self.Labelframe3.place(relx=0.76, rely=0.292, relheight=0.174
                , relwidth=0.229)
        self.Labelframe3.configure(relief='groove')
        self.Labelframe3.configure(foreground="black")
        self.Labelframe3.configure(text='''Path Planning''')
        self.Labelframe3.configure(background="#d9d9d9")

        self.TEntry1 = ttk.Entry(self.Labelframe3)
        self.TEntry1.place(relx=0.455, rely=0.4, relheight=0.168, relwidth=0.482
                , bordermode='ignore')
        self.TEntry1.configure(takefocus="")
        self.TEntry1.configure(cursor="ibeam")

        self.TEntry2 = ttk.Entry(self.Labelframe3)
        self.TEntry2.place(relx=0.455, rely=0.64, relheight=0.168, relwidth=0.482
                , bordermode='ignore')
        self.TEntry2.configure(takefocus="")
        self.TEntry2.configure(cursor="ibeam")

        self.TLabel1 = ttk.Label(self.Labelframe3)
        self.TLabel1.place(relx=0.045, rely=0.4, height=19, width=77
                , bordermode='ignore')
        self.TLabel1.configure(background="#d9d9d9")
        self.TLabel1.configure(foreground="#000000")
        self.TLabel1.configure(font="TkDefaultFont")
        self.TLabel1.configure(relief="flat")
        self.TLabel1.configure(anchor='w')
        self.TLabel1.configure(justify='left')
        self.TLabel1.configure(text='''Base Latitude:''')

        self.TLabel2 = ttk.Label(self.Labelframe3)
        self.TLabel2.place(relx=0.045, rely=0.64, height=19, width=88
                , bordermode='ignore')
        self.TLabel2.configure(background="#d9d9d9")
        self.TLabel2.configure(foreground="#000000")
        self.TLabel2.configure(font="TkDefaultFont")
        self.TLabel2.configure(relief="flat")
        self.TLabel2.configure(anchor='w')
        self.TLabel2.configure(justify='left')
        self.TLabel2.configure(text='''Base Longitude:''')

        self.TButton1 = ttk.Button(self.Labelframe3)
        self.TButton1.place(relx=0.318, rely=0.16, height=25, width=76
                , bordermode='ignore')
        self.TButton1.configure(takefocus="")
        self.TButton1.configure(text='''Execute''')

        self.Labelframe4 = tk.LabelFrame(top)
        self.Labelframe4.place(relx=0.76, rely=0.472, relheight=0.507
                , relwidth=0.229)
        self.Labelframe4.configure(relief='groove')
        self.Labelframe4.configure(foreground="black")
        self.Labelframe4.configure(text='''Drone Control''')
        self.Labelframe4.configure(background="#d9d9d9")

if __name__ == '__main__':
    vp_start_gui()





